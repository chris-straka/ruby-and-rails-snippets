{
  "frozenStringLiteral": {
    "prefix": "fr",
    "body": "# frozen_string_literal: true $0"
  },
  "map": {
    "prefix": "map",
    "body": "map { |$0| }"
  },
  "mapp": {
    "prefix": "mapp",
    "body": "map { |$1| $0 }"
  },
  "each": {
    "prefix": "each",
    "body": "each { |$0| }"
  },
  "eachh": {
    "prefix": "eachh",
    "body": "each { |$1| $0 }"
  },
  "select": {
    "prefix": "select",
    "body": "select { |$0| }"
  },
  "selectt": {
    "prefix": "selectt",
    "body": "select { |$1| $0 }"
  },
  "inject": {
    "prefix": "inject",
    "body": "inject { |$0| }"
  },
  "injectt": {
    "prefix": "injectt",
    "body": "inject { |$1| $0 }"
  },
  "all": {
    "prefix": "all",
    "body": "all? { |$0| }"
  },
  "alll": {
    "prefix": "alll",
    "body": "all? { |$1| $0 }"
  },
  "any": {
    "prefix": "any",
    "body": "any? { |$0| }"
  },
  "anyy": {
    "prefix": "anyy",
    "body": "any { |$1| $0 }"
  },
  "for": {
    "prefix": "for",
    "body": "for $1 in $0 do\n\t\nend"
  },
  "forr": {
    "prefix": "forr",
    "body": "for $1 in $2 do\n\t$0\nend"
  },
  "loop": {
    "prefix": "loop",
    "body": "loop do\n\t$0\nend"
  },
  "while": {
    "prefix": "while",
    "body": "while $0\n\t\nend"
  },
  "whilee": {
    "prefix": "whilee",
    "body": "while $1\n\t$0\nend"
  },
  "until": {
    "prefix": "until",
    "body": "until $0\n\t\nend"
  },
  "untill": {
    "prefix": "untill",
    "body": "until $1\n\t$0\nend"
  },
  "unless": {
    "prefix": "unless",
    "body": "unless $0\n\t\nend"
  },
  "unlesss": {
    "prefix": "unlesss",
    "body": "unless $1\n\t$0\nend"
  },
  "module": {
    "prefix": "module",
    "body": "module $0\n\t\nend"
  },
  "moddule": {
    "prefix": "modulee",
    "body": "module $1\n\t$0\nend"
  },
  "require": {
    "prefix": "req",
    "body": "require '$0'"
  },
  "requireAlt": {
    "prefix": "reqq",
    "body": "require(:$0)"
  },
  "include": {
    "prefix": "include",
    "body": "include($0)"
  },
  "do": {
    "prefix": "do",
    "body": "do\n\t$0\nend"
  },
  "if": {
    "prefix": "if",
    "body": "if $0\n\t\nend"
  },
  "if else": {
    "prefix": "ifelse",
    "body": "if $0\n\t\nelse\n\t\nend"
  },
  "if elsif": {
    "prefix": "ifelsif",
    "body": "if $0\n\t\nelsif \n\t\nend"
  },
  "if elsif else": {
    "prefix": "ifelsifelse",
    "body": "if $0\n\t\nelsif \n\t\nelse\n\t\nend"
  },
  "def": {
    "prefix": "def",
    "body": "def $0\n\t$0\nend"
  },
  "begin": {
    "prefix": "begin",
    "body": "begin\n\t$0\nrescue => \n\t\nend"
  },
  "cla": {
    "prefix": "cla",
    "body": "class $0\n\t\nend"
  },
  "init": {
    "prefix": "init",
    "body": "def initialize($0)\n\t\nend"
  },
  "cla1": {
    "prefix": "cla1",
    "body": "class $1\n\tinitialize($2)\n\t@$2 = $2\nend\n$0\nend"
  },
  "cla2": {
    "prefix": "cla2",
    "body": "class $1\n\tinitialize($2, $3)\n\t@$2 = $2\n\t@$3 = $3\nend\n$0\nend"
  },
  "cla3": {
    "prefix": "cla3",
    "body": "class $1\n\tinitialize($2, $3, $4)\n\t@$2 = $2\n\t@$3 = $3\n\t@$4 = $4\nend\n$0\nend"
  },
  "ClassExtends": {
    "prefix": "clex",
    "body": "class ${1:ClassName} < ${2:ParentClass}\n\t$0\nend"
  }
}
